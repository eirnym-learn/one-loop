---
name: Cache Cargo Dependencies
inputs:
  cache-key:
    description: Cache key to use for cargo home
    required: false
    default: cargo-cache
  cache-target-key:
    description: Cache key to use for target
    required: false
    default: cargo-target
  target-part:
    description: Target part for the cache. Rust target triple by default.
    required: false
  additional_home:
    description: Additional rules for cargo home caching
    required: false
  additional_target:
    description: Additional rules for target folder
    required: false
runs:
  using: composite
  steps:
  - name: Set target part
    shell: bash
    run: |
      if [[ -z "${{ inputs.target-part }}" ]]; then
        rust_target=$(rustc -vV | sed -nE 's/host: (.*)/\1/p')
      else
        rust_target="${{ inputs.target-part }}"
      fi
      echo "RUST_TARGET=${rust_target}" >> $GITHUB_ENV

    # Cache the global cargo directory, but NOT the local `target` directory which
    # we cannot reuse anyway when the nightly changes (and it grows quite large
    # over time).

    # It will be saved every time anyway, thus just use primary key only.
    # Will be upgraded when 

  - name: Add cache for cargo
    id: cache
    uses: actions/cache@v4   # v4.2.0
    with:
      path: |
        # List is taken from <https://doc.rust-lang.org/nightly/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci>.
        ~/.cargo/bin
        ~/.cargo/registry/index
        ~/.cargo/registry/cache
        ~/.cargo/git/db
        # contains package information of crates installed via `cargo install`.
        ~/.cargo/.crates.toml
        ~/.cargo/.crates2.json
        ${{ inputs.additional_home }}
      key: ${{ env.RUST_TARGET }}-${{ inputs.cache-key }}-${{ hashFiles('Cargo.lock', 'Cargo.toml', '.github/ci-tools.toml', '.cargo/config.toml') }}
  - name: cache target
    uses: actions/cache@v4
    with:
      path: |
        # Cache target, but not temporary folders
        target
        !target/llvm-cov*
        !target/nextest
        !target/package
        !target/tmp
        ${{ inputs.additional_target }}
      key: ${{ env.RUST_TARGET }}-${{ inputs.cache-target-key }}-${{ hashFiles('Cargo.lock', 'Cargo.toml', '.github/ci-tools.toml', '.cargo/config.toml') }}
